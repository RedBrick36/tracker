/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.redbrick.medright.tracker.ui;

import javax.persistence.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import org.jdesktop.beansbinding.BeanProperty;
import javax.swing.JPanel;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import java.awt.Dimension;

/**
 *
 * @author RedBrick
 */
@Entity
public class ScheduleDataEntryGUI extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	@Id
	@OneToOne(mappedBy = "SchedDataEntryGUI")
	private ScheduleDataEntryGUI SchedDataEntryGUI;

	/**
	 * Creates new form ScheduleDataEntry
	 */
	public ScheduleDataEntryGUI() {
		setPreferredSize(new Dimension(700, 469));
		setMaximumSize(new Dimension(700, 469));
		setMinimumSize(new Dimension(700, 469));
		getContentPane().setMinimumSize(new Dimension(695, 469));
		setSize(new Dimension(700, 469));
		getContentPane().setMaximumSize(new Dimension(695, 469));
		this.initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		SchedCreate = new javax.swing.JPanel();
		jcbSchedType = new javax.swing.JComboBox();
		jlSchedType = new javax.swing.JLabel();
		Monday = new javax.swing.JCheckBox();
		Tuesday = new javax.swing.JCheckBox();
		Wednesday = new javax.swing.JCheckBox();
		Thursday = new javax.swing.JCheckBox();
		Friday = new javax.swing.JCheckBox();
		Saturday = new javax.swing.JCheckBox();
		Sunday = new javax.swing.JCheckBox();
		AM = new javax.swing.JCheckBox();
		MidMorn = new javax.swing.JCheckBox();
		Noon = new javax.swing.JCheckBox();
		MidAft = new javax.swing.JCheckBox();
		Afternoon = new javax.swing.JCheckBox();
		Evening = new javax.swing.JCheckBox();
		Bedtime = new javax.swing.JCheckBox();
		jlName = new javax.swing.JLabel();
		jlCondition = new javax.swing.JLabel();
		jlDose = new javax.swing.JLabel();
		jcbMeasure = new javax.swing.JComboBox();
		Reminders = new javax.swing.JCheckBox();
		jftfName = new javax.swing.JFormattedTextField();
		jftfDose = new javax.swing.JFormattedTextField();
		jftfCondition = new javax.swing.JFormattedTextField();
		jlMeasure = new javax.swing.JLabel();
		leadTime = new javax.swing.JComboBox();
		jLabel1 = new javax.swing.JLabel();
		MidOfNight = new javax.swing.JCheckBox();
		allDays = new javax.swing.JCheckBox();
		allTimes = new javax.swing.JCheckBox();
		asNeeded = new javax.swing.JCheckBox();
		OTF = new javax.swing.JComboBox();
		jLabel2 = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Treatement Schedule Creator");

		SchedCreate.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Treatment Schedule Creator",
				javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP,
				new java.awt.Font("Dialog", 1, 18))); // NOI18N
		SchedCreate.setName("Treatment Schedule Creator"); // NOI18N

		jcbSchedType.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Select  --", "Pill", "Liquid", "Injection", "Topical", "Supplements" }));
		jcbSchedType.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 204), 1, true));
		jcbSchedType.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jcbSchedTypeActionPerformed(evt);
			}
		});

		jlSchedType.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jlSchedType.setText("Treatment Type");

		Monday.setText("Monday");
		Monday.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				MondayActionPerformed(evt);
			}
		});

		Tuesday.setText("Tuesday");
		Tuesday.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				TuesdayActionPerformed(evt);
			}
		});

		Wednesday.setText("Wednesday");
		Wednesday.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				WednesdayActionPerformed(evt);
			}
		});

		Thursday.setText("Thursday");
		Thursday.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ThursdayActionPerformed(evt);
			}
		});

		Friday.setText("Friday");
		Friday.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				FridayActionPerformed(evt);
			}
		});

		Saturday.setText("Saturday");
		Saturday.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				SaturdayActionPerformed(evt);
			}
		});

		Sunday.setText("Sunday");
		Sunday.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				SundayActionPerformed(evt);
			}
		});

		AM.setText("A.M.");
		AM.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AMActionPerformed(evt);
			}
		});

		MidMorn.setText("Mid-Morning");
		MidMorn.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				MidMornActionPerformed(evt);
			}
		});

		Noon.setText("Noon");
		Noon.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				NoonActionPerformed(evt);
			}
		});

		MidAft.setText("Mid-Afternoon");
		MidAft.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				MidAftActionPerformed(evt);
			}
		});

		Afternoon.setText("Afternoon");
		Afternoon.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AfternoonActionPerformed(evt);
			}
		});

		Evening.setText("Evening");
		Evening.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				EveningActionPerformed(evt);
			}
		});

		Bedtime.setText("Bedtime");
		Bedtime.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				BedtimeActionPerformed(evt);
			}
		});

		jlName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
		jlName.setText(" Name of Medication, Treatment or Supplement");

		jlCondition.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
		jlCondition.setText("Condition");

		jlDose.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
		jlDose.setText("Dose");

		jcbMeasure.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jcbMeasure.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Select --", "Grams", "Milligrams", "Micrograms", "I.U.", "USP", "Milliliters", "CC's",
						"Ounces", "Teaspoons", "Tablespoons", "Cups", "Tablet(s)", "Application" }));
		jcbMeasure.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 204), 1, true));
		jcbMeasure.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jcbMeasureActionPerformed(evt);
			}
		});

		Reminders.setText(" Create Reminder");
		Reminders.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				RemindersActionPerformed(evt);
			}
		});

		jftfName.setMinimumSize(new java.awt.Dimension(4, 21));
		jftfName.setPreferredSize(new java.awt.Dimension(4, 21));
		jftfName.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jftfNameActionPerformed(evt);
			}
		});

		jftfDose.setMinimumSize(new java.awt.Dimension(4, 21));
		jftfDose.setPreferredSize(new java.awt.Dimension(4, 21));
		jftfDose.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jftfDoseActionPerformed(evt);
			}
		});

		jftfCondition.setMinimumSize(new java.awt.Dimension(4, 21));
		jftfCondition.setPreferredSize(new java.awt.Dimension(4, 21));
		jftfCondition.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jftfConditionActionPerformed(evt);
			}
		});

		jlMeasure.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
		jlMeasure.setText("  Measure  ");

		leadTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "15", "30", "45", "60" }));

		jLabel1.setText("Reminder Lead Time Min's");

		MidOfNight.setText("Middle of Night");

		allDays.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
		allDays.setText("All Days ");
		allDays.setBorder(null);
		allDays.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				allDaysActionPerformed(evt);
			}
		});

		allTimes.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
		allTimes.setText("All Times ");
		allTimes.setBorder(null);
		allTimes.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				allTimesActionPerformed(evt);
			}
		});

		asNeeded.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
		asNeeded.setText("As Needed ");
		asNeeded.setBorder(null);
		asNeeded.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				asNeededActionPerformed(evt);
			}
		});

		OTF.setModel(
				new javax.swing.DefaultComboBoxModel(new String[] { "--", "Weekly", "Every Other Week", "Monthly" }));

		jLabel2.setText("Additional Time-Frames");

		JButton btnHelp = new JButton("Help");

		JButton btnSave = new JButton("Save");

		JButton btnExit = new JButton("Exit");

		JButton btnNew = new JButton("New");

		javax.swing.GroupLayout SchedCreateLayout = new javax.swing.GroupLayout(SchedCreate);
		SchedCreateLayout
				.setHorizontalGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
						.addGroup(SchedCreateLayout.createSequentialGroup().addContainerGap()
								.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
										.addComponent(jSeparator1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE,
												GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addGroup(
										SchedCreateLayout.createSequentialGroup()
												.addGroup(SchedCreateLayout
														.createParallelGroup(
																Alignment.LEADING)
														.addGroup(
																SchedCreateLayout
																		.createParallelGroup(Alignment.TRAILING)
																		.addComponent(btnHelp).addGroup(
																				SchedCreateLayout
																						.createSequentialGroup()
																						.addComponent(AM)
																						.addPreferredGap(
																								ComponentPlacement.UNRELATED)
																				.addComponent(MidMorn)
																				.addPreferredGap(
																						ComponentPlacement.UNRELATED)
														.addComponent(Noon)
														.addPreferredGap(ComponentPlacement.UNRELATED)
														.addComponent(MidAft)))
								.addComponent(jlName)
								.addGroup(SchedCreateLayout.createParallelGroup(Alignment.TRAILING, false)
										.addComponent(jftfName, Alignment.LEADING, GroupLayout.DEFAULT_SIZE,
												GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGroup(SchedCreateLayout.createSequentialGroup()
												.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
														.addComponent(jftfDose, GroupLayout.PREFERRED_SIZE, 96,
																GroupLayout.PREFERRED_SIZE)
												.addGroup(SchedCreateLayout.createSequentialGroup().addGap(29)
														.addComponent(jlDose)))
												.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
														.addGroup(SchedCreateLayout.createSequentialGroup().addGap(26)
																.addComponent(jlMeasure))
														.addGroup(SchedCreateLayout.createSequentialGroup()
																.addPreferredGap(ComponentPlacement.UNRELATED)
																.addComponent(jcbMeasure, GroupLayout.PREFERRED_SIZE,
																		GroupLayout.DEFAULT_SIZE,
																		GroupLayout.PREFERRED_SIZE)))
												.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
														.addGroup(SchedCreateLayout.createSequentialGroup()
																.addPreferredGap(ComponentPlacement.UNRELATED)
																.addComponent(jftfCondition, GroupLayout.PREFERRED_SIZE,
																		125, GroupLayout.PREFERRED_SIZE))
														.addGroup(SchedCreateLayout.createSequentialGroup().addGap(42)
																.addComponent(jlCondition)))))
								.addComponent(jLabel2)
								.addGroup(SchedCreateLayout.createSequentialGroup().addGap(5).addComponent(OTF,
										GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)))
								.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
										.addGroup(Alignment.TRAILING,
												SchedCreateLayout.createSequentialGroup()
														.addComponent(leadTime, GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
														.addGap(59))
										.addGroup(Alignment.TRAILING, SchedCreateLayout.createSequentialGroup()
												.addComponent(btnSave).addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(btnExit).addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(btnNew).addPreferredGap(ComponentPlacement.RELATED))
										.addGroup(Alignment.TRAILING,
												SchedCreateLayout.createSequentialGroup().addComponent(jLabel1)
														.addGap(9))
										.addGroup(Alignment.TRAILING, SchedCreateLayout.createSequentialGroup()
												.addComponent(Afternoon).addPreferredGap(ComponentPlacement.UNRELATED)
												.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
														.addComponent(Reminders)
														.addGroup(SchedCreateLayout.createSequentialGroup()
																.addComponent(Evening)
																.addPreferredGap(ComponentPlacement.UNRELATED)
																.addComponent(Bedtime))))))
						.addComponent(MidOfNight)
						.addGroup(SchedCreateLayout.createSequentialGroup().addComponent(allDays)
								.addPreferredGap(ComponentPlacement.UNRELATED).addComponent(allTimes)
								.addPreferredGap(ComponentPlacement.UNRELATED).addComponent(asNeeded))
						.addGroup(
								SchedCreateLayout.createSequentialGroup()
										.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
												.addComponent(jlSchedType).addComponent(jcbSchedType,
														GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
										.addGap(51)
										.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
												.addComponent(Saturday).addComponent(Monday))
										.addPreferredGap(ComponentPlacement.RELATED).addGroup(
												SchedCreateLayout.createParallelGroup(Alignment.LEADING)
														.addComponent(
																Sunday)
														.addGroup(SchedCreateLayout.createSequentialGroup()
																.addComponent(Tuesday)
																.addPreferredGap(ComponentPlacement.UNRELATED)
																.addComponent(Wednesday)
																.addPreferredGap(ComponentPlacement.UNRELATED)
																.addComponent(Thursday)
																.addPreferredGap(ComponentPlacement.UNRELATED)
																.addComponent(Friday)))))
								.addGap(157)));
		SchedCreateLayout.setVerticalGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(SchedCreateLayout.createSequentialGroup().addGap(21)
						.addGroup(SchedCreateLayout.createParallelGroup(Alignment.BASELINE).addComponent(allTimes)
								.addComponent(asNeeded).addComponent(allDays))
						.addGap(20)
						.addGroup(SchedCreateLayout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jcbSchedType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(Monday).addComponent(Tuesday).addComponent(Wednesday)
								.addComponent(Thursday).addComponent(Friday))
						.addPreferredGap(
								ComponentPlacement.RELATED)
						.addGroup(SchedCreateLayout.createParallelGroup(Alignment.BASELINE).addComponent(jlSchedType)
								.addComponent(Saturday).addComponent(Sunday))
						.addGap(20)
						.addGroup(SchedCreateLayout.createParallelGroup(Alignment.BASELINE).addComponent(AM)
								.addComponent(MidMorn).addComponent(Noon).addComponent(MidAft).addComponent(Afternoon)
								.addComponent(Evening).addComponent(Bedtime))
						.addPreferredGap(ComponentPlacement.RELATED).addComponent(MidOfNight).addGap(4)
						.addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED).addComponent(jlName).addGap(8)
						.addGroup(SchedCreateLayout.createParallelGroup(Alignment.LEADING)
								.addGroup(SchedCreateLayout.createSequentialGroup()
										.addComponent(jftfName, GroupLayout.PREFERRED_SIZE, 29,
												GroupLayout.PREFERRED_SIZE)
										.addGap(7)
										.addGroup(SchedCreateLayout.createParallelGroup(Alignment.BASELINE)
												.addComponent(jlDose, GroupLayout.PREFERRED_SIZE, 17,
														GroupLayout.PREFERRED_SIZE)
												.addComponent(jlCondition).addComponent(jlMeasure))
										.addGroup(SchedCreateLayout.createParallelGroup(Alignment.BASELINE)
												.addComponent(jftfDose, GroupLayout.PREFERRED_SIZE, 26,
														GroupLayout.PREFERRED_SIZE)
												.addComponent(jftfCondition, GroupLayout.PREFERRED_SIZE, 27,
														GroupLayout.PREFERRED_SIZE)
												.addComponent(jcbMeasure, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
										.addComponent(jLabel2))
								.addGroup(SchedCreateLayout.createSequentialGroup().addGap(8).addComponent(Reminders)
										.addPreferredGap(ComponentPlacement.RELATED)
										.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 22,
												GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(ComponentPlacement.UNRELATED).addComponent(leadTime,
												GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE)))
						.addGap(18)
						.addGroup(SchedCreateLayout.createParallelGroup(Alignment.BASELINE)
								.addComponent(OTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(btnHelp).addComponent(btnSave).addComponent(btnExit).addComponent(btnNew))
						.addContainerGap()));
		SchedCreate.setLayout(SchedCreateLayout);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(26)
						.addComponent(SchedCreate, GroupLayout.PREFERRED_SIZE, 649, GroupLayout.PREFERRED_SIZE)
						.addContainerGap(25, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(14, Short.MAX_VALUE).addComponent(SchedCreate,
						GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
				.addContainerGap()));
		layout.setHonorsVisibility(false);
		getContentPane().setLayout(layout);

		pack();
		initDataBindings();
	}// </editor-fold>//GEN-END:initComponents

	private void RemindersActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_RemindersActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_RemindersActionPerformed

	private void TuesdayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_TuesdayActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_TuesdayActionPerformed

	private void MondayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_MondayActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_MondayActionPerformed

	private void WednesdayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_WednesdayActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_WednesdayActionPerformed

	private void ThursdayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ThursdayActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_ThursdayActionPerformed

	private void FridayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_FridayActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_FridayActionPerformed

	private void SaturdayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_SaturdayActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_SaturdayActionPerformed

	private void SundayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_SundayActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_SundayActionPerformed

	private void AMActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AMActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_AMActionPerformed

	private void MidMornActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_MidMornActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_MidMornActionPerformed

	private void NoonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_NoonActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_NoonActionPerformed

	private void MidAftActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_MidAftActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_MidAftActionPerformed

	private void AfternoonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AfternoonActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_AfternoonActionPerformed

	private void EveningActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_EveningActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_EveningActionPerformed

	private void BedtimeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BedtimeActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_BedtimeActionPerformed

	private void jftfNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jftfNameActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jftfNameActionPerformed

	private void jftfDoseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jftfDoseActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jftfDoseActionPerformed

	private void jftfConditionActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jftfConditionActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jftfConditionActionPerformed

	private void jcbSchedTypeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jcbSchedTypeActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jcbSchedTypeActionPerformed

	private void jcbMeasureActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jcbMeasureActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jcbMeasureActionPerformed

	private void allDaysActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_allDaysActionPerformed
		if (this.allDays.isSelected()) {
			this.Monday.setSelected(true);
			this.Tuesday.setSelected(true);
			this.Wednesday.setSelected(true);
			this.Thursday.setSelected(true);
			this.Friday.setSelected(true);
			this.Saturday.setSelected(true);
			this.Sunday.setSelected(true);
		} else {
			this.Monday.setSelected(false);
			this.Tuesday.setSelected(false);
			this.Wednesday.setSelected(false);
			this.Thursday.setSelected(false);
			this.Friday.setSelected(false);
			this.Saturday.setSelected(false);
			this.Sunday.setSelected(false);

		}
	}// GEN-LAST:event_allDaysActionPerformed

	private void allTimesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_allTimesActionPerformed
		if (this.allTimes.isSelected()) {
			this.AM.setSelected(true);
			this.MidMorn.setSelected(true);
			this.Noon.setSelected(true);
			this.MidAft.setSelected(true);
			this.Afternoon.setSelected(true);
			this.Evening.setSelected(true);
			this.Bedtime.setSelected(true);
			this.MidOfNight.setSelected(true);
		} else {
			this.AM.setSelected(false);
			this.MidMorn.setSelected(false);
			this.Noon.setSelected(false);
			this.MidAft.setSelected(false);
			this.Afternoon.setSelected(false);
			this.Evening.setSelected(false);
			this.Bedtime.setSelected(false);
			this.MidOfNight.setSelected(false);
		}
	}// GEN-LAST:event_allTimesActionPerformed

	private void asNeededActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_asNeededActionPerformed
		if (this.asNeeded.isSelected()) {
			this.Reminders.setSelected(false);
			this.Reminders.setEnabled(false);
			this.leadTime.setEnabled(false);
			this.allTimes.setSelected(false);
			this.allDays.setSelected(false);
			this.AM.setEnabled(false);
			this.MidMorn.setEnabled(false);
			this.Noon.setEnabled(false);
			this.MidAft.setEnabled(false);
			this.Afternoon.setEnabled(false);
			this.Evening.setEnabled(false);
			this.Bedtime.setEnabled(false);
			this.MidOfNight.setEnabled(false);
			this.Monday.setEnabled(false);
			this.Tuesday.setEnabled(false);
			this.Wednesday.setEnabled(false);
			this.Thursday.setEnabled(false);
			this.Friday.setEnabled(false);
			this.Saturday.setEnabled(false);
			this.Sunday.setEnabled(false);
			this.AM.setSelected(false);
			this.MidMorn.setSelected(false);
			this.Noon.setSelected(false);
			this.MidAft.setSelected(false);
			this.Afternoon.setSelected(false);
			this.Evening.setSelected(false);
			this.Bedtime.setSelected(false);
			this.MidOfNight.setSelected(false);
			this.Monday.setSelected(false);
			this.Tuesday.setSelected(false);
			this.Wednesday.setSelected(false);
			this.Thursday.setSelected(false);
			this.Friday.setSelected(false);
			this.Saturday.setSelected(false);
			this.Sunday.setSelected(false);

		} else {
			this.Reminders.setSelected(false);
			this.Reminders.setEnabled(true);
			this.leadTime.setEnabled(true);
			this.AM.setEnabled(true);
			this.MidMorn.setEnabled(true);
			this.Noon.setEnabled(true);
			this.MidAft.setEnabled(true);
			this.Afternoon.setEnabled(true);
			this.Evening.setEnabled(true);
			this.Bedtime.setEnabled(true);
			this.MidOfNight.setEnabled(true);
			this.Monday.setEnabled(true);
			this.Tuesday.setEnabled(true);
			this.Wednesday.setEnabled(true);
			this.Thursday.setEnabled(true);
			this.Friday.setEnabled(true);
			this.Saturday.setEnabled(true);
			this.Sunday.setEnabled(true);
		}
	}// GEN-LAST:event_asNeededActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/*
		 * Set the Nimbus look and feel
		 */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Metal".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException
				| javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ScheduleDataEntryGUI.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		// </editor-fold>
		// </editor-fold>

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new ScheduleDataEntryGUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JCheckBox AM;
	private javax.swing.JCheckBox Afternoon;
	private javax.swing.JCheckBox Bedtime;
	private javax.swing.JCheckBox Evening;
	private javax.swing.JCheckBox Friday;
	private javax.swing.JCheckBox MidAft;
	private javax.swing.JCheckBox MidMorn;
	private javax.swing.JCheckBox MidOfNight;
	private javax.swing.JCheckBox Monday;
	private javax.swing.JCheckBox Noon;
	private javax.swing.JComboBox OTF;
	private javax.swing.JCheckBox Reminders;
	private javax.swing.JCheckBox Saturday;
	private javax.swing.JPanel SchedCreate;
	private javax.swing.JCheckBox Sunday;
	private javax.swing.JCheckBox Thursday;
	private javax.swing.JCheckBox Tuesday;
	private javax.swing.JCheckBox Wednesday;
	private javax.swing.JCheckBox allDays;
	private javax.swing.JCheckBox allTimes;
	private javax.swing.JCheckBox asNeeded;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JComboBox jcbMeasure;
	private javax.swing.JComboBox jcbSchedType;
	private javax.swing.JFormattedTextField jftfCondition;
	private javax.swing.JFormattedTextField jftfDose;
	private javax.swing.JFormattedTextField jftfName;
	private javax.swing.JLabel jlCondition;
	private javax.swing.JLabel jlDose;
	private javax.swing.JLabel jlMeasure;
	private javax.swing.JLabel jlName;
	private javax.swing.JLabel jlSchedType;
	private javax.swing.JComboBox leadTime;
	// End of variables declaration//GEN-END:variables

	public ScheduleDataEntryGUI getSchedDataEntryGUI() {
		return this.SchedDataEntryGUI;
	}

	public void setSchedDataEntry(ScheduleDataEntryGUI sde) {
		this.SchedDataEntryGUI = sde;
	}

	protected void initDataBindings() {
		BeanProperty<ScheduleDataEntryGUI, Double> scheduleDataEntryGUIBeanProperty = BeanProperty
				.create("size.size.width");
		BeanProperty<JPanel, Integer> jPanelBeanProperty = BeanProperty.create("width");
		AutoBinding<ScheduleDataEntryGUI, Double, JPanel, Integer> autoBinding = Bindings.createAutoBinding(
				UpdateStrategy.READ, SchedDataEntryGUI, scheduleDataEntryGUIBeanProperty, SchedCreate,
				jPanelBeanProperty);
		autoBinding.bind();
	}
}
